1+2
1+2
ls()
ls()
a=1
b=2
c=34
ls()
x<-c(1,2,3,4)
sum(x)
min(x)
max(x)
y<-c("hello","world")
z<-c(TRUE,FALSE,TRUE,FALSE)
ls()
class(x)
?class
x.join(y,z)
x.join<-(y,z)
x.join<-c(y,z)
x.join<-c(x,y,z)
c(2,4
c(2,4)
c(2,4)
x[x<10]
x[x<1]
x[x<1]
x<1
x[x<1]
x[x<2]
x.join+1
x.join+1
x.join+1
x<-c(1,2,3,4)
x.join+1
s.join+1
vv<-rnorm(1000)
hist(vv)
vv1<-vv[vv>0]
vv1<-vv[vv>=0]
vv2<-vv[vv<0]
summary(vv1)
hist(vv1)
hist(vv2)
seq(1,10,by=1)
seq(1,10,length.out=1)
help seq
help seq()
?seq()
seq(1,10,length.out=5)
rep(2,10)
rep(1:4,2)
y<-c(1,NA,2,NA,3)
mean(y)
mean(y)
is.na(y)
mean(y,na.rm=TRUE)
matrix(1:12,nrow=3,ncol=4,byrow=T)
matrix(1:12,nrow=3,ncol=4)
M[2,3]
M<-matrix(1:12,nrow=3,ncol=4)
M[2,3]
M2<-matrix(1:16,nrow=4,ncol=4)
M3<-M1%*%M2
M3<-M%*%M2
apply(M,2,mean)
Lst <- list(name="Fred", wife="Mary",  no.children=3, child.ages=c(4,7,9))
class(Lst)
length(Lst)
Lst$no.children
Lst$child.ages
Lst$name
Lst[[1]]
mean.and.sd <- function(x){
av <- mean(x)
sd <- sqrt(var(x))
return(c(mean=av,sd=sd))
}
x<-c(1,2,3,4)
mean.and.sd(x)
print(i)
{
print(i)
}
print(x)
for(x in 1:10)
{
print(x)
}
load("~/data analysis/assignment 1/.RData")
rep(1:10, times 10)
rep(1:10, times=10)
vec[-1]
vec<-1:10
rep(1:10,times=10)
rep(1:10,times=1)
vec<-c(1:10)
vec[-1]
seq(1,10,3)
matrix(0,10,5,byrow=TRUE)
matrix(0,10,5,byrow=FALSE)
x=seq(1,10,2)
x[2]
x
x
clear
x1<-c(4,"12","15")
x1<-as.numeric(x1)
x2<-x1[-(2:3)]
x2<-c(x2,"12")
x2
x1<- rep(1:3,times=4,each=2)
x1<-x1[1:(length(x1)/2)]
x1<-cbind(x1,x1,x1)
x1<-x1*2
x1
seq1<-seq(0,by=2,length.out=5)
seq2<-seq(0,by=2,to=7)
length(seq1)==length(seq2)
length(seq1)
length(seq2)
seq2<-seq(0,by=2,to=8)
length(seq2)
length(seq1)==length(seq2)
vec<-1:10
mat<-matrix(1:10,2,5,byrow=T)
vec[1]==mat[1]
vec[2]==mat[2]
vec
mat
vec1 <- c("M","F","F","M")
vec2<- c("M","M","M","M")
vec1[vec2 == "M"]
vec1<- c(rep(1,10),rep(3,10))
n <- length(rep(1,10))
m <- length(rep(3,10))
vec1[(m+1):(n+m)]/vec1[1:m]
m[1:5]==m[1:5,1]
mat!=mat[,]
mat<-matrix(1:10,2,5,byrow=T)
mat!=mat[,]
mat = matrix(1:25,5,5)
apply(mat,1,mean)
mat
apply(mat,1,mean,byrow=True)
mat = matrix(1:25,5,5,byrow=True)
mat = matrix(1:25,5,5,byrow=TRUE)
mar=t
mat
apply(mat,2,mean)
mat = matrix(1:25,5,5*2)
mat
apply(mat,1,mean/2)
apply(mat,1,mean)/2
mat = matrix(1:25,5,5)
apply(mat,1,mean)
mat
?table
library(readr)
train <- read_csv("data analysis/data analysis projects/titanic dataset/train.csv")
View(train)
library(readr)
test <- read_csv("data analysis/data analysis projects/titanic dataset/test.csv")
View(test)
train <- read_csv("data analysis/data analysis projects/titanic dataset/train.csv")
test <- read_csv("data analysis/data analysis projects/titanic dataset/test.csv")
str(train)
View(test)
train <- read_csv("data analysis/data analysis projects/titanic dataset/train.csv",stringsAsFactors=TRUE)
train <- read_csv("data analysis/data analysis projects/titanic dataset/train.csv")
train$Survived
tabel(train$Survived)
tabel(train$Survived)
table(train$Survived)
table(train)
table(train$Sex)
prop.table(table(train$Survived))
#we Assume that most of the people died as 61.61% of people died
test$Survived<-rep(0,418)
View(test)
View(test)
submit<-data.frame(PassengerId=test$PassengerId,Survived=test$Survived)
write.csv(submit,"theyallperish.csv",row.names=FALSE)
#Set working directories and import datafiles
getwd()
#Gender summary
table(train$Sex)
#Gender-Survived
prop.table(table(train$Sex,train$Survived))
#Gender-Survived
prop.table(table(train$Sex,train$Survived),1)
#This shows that majority of females aboard survived, so lets update the prediction
#Prediction 2
test$Survived<-0
test$Survived[test$Sex=='female'] <-1
prediction2<-data.frame(PassengerId=test$PassengerId,Survived=test$Survived)
write.csv(prediction2,"prediction2.csv",row.names=FALSE)
#Age summary
summary(train$Age)
table(train$Age)
#Age summary
summary(train$Age)
#Age summary
summary(train$Age)
table(train$Age)
train$Child<-0
train$Child[train$Age<18]<-1
table[train$Child]
table(train$Child)
aggregate(Survived ~ Child + Sex, data=train, FUN=sum)
aggregate(Survived ~ Child + Sex, data=train, FUN=length)
aggregate(Survived ~ Child + Sex, data=train, FUN=function(x) {sum(x)/length(x)})
table(train$Pclass)
table(train$Fare)
#prediction 2 remains the same, if female, chances of survival is more
summary(train$Fare)
View(train)
#prediction 2 remains the same, if female, chances of survival is more
summary(train$Fare)
#prediction 2 remains the same, if female, chances of survival is more
summary(train$Fare)
summary(train$Age)
#prediction 2 remains the same, if female, chances of survival is more
summary(train$Fare)
train$Fare2<-'30+'
train$Fare2[train$Fare < 30 & train$Fare >= 20] <- '20-30'
train$Fare2[train$Fare < 20 & train$Fare >= 10] <- '10-20'
train$Fare2[train$Fare < 10] <- '<10'
aggregate(Survived~Fare2+sex+Pclass,FUN=function(x) {sum(x)/length(x)})
aggregate(Survived ~ Fare2+sex+Pclass,FUN=function(x) {sum(x)/length(x)})
aggregate(Survived ~ Fare2+sex+Pclass,data=train,FUN=function(x) {sum(x)/length(x)})
aggregate(Survived ~ Fare2+Sex+Pclass,data=train,FUN=function(x) {sum(x)/length(x)})
test$Survived <- 0
test$Survived[test$Sex == 'female'] <- 1
test$Survived[test$Sex == 'female' & test$Pclass == 3 & test$Fare >= 20] <- 0
prediction3<-data.frame(PassengerId=test$PassengerId,Survived<-test$Survived)
write.csv(prediction3,"prediction3.csv",row.names = FALSE)
prediction3<-data.frame(PassengerId=test$PassengerId,Survived<-test$Survived)
write.csv(prediction3,"prediction3.csv",row.names = FALSE)
prediction3<-data.frame(PassengerId=test$PassengerId,Survived<-test$Survived)
write.csv(prediction3,"prediction3.csv",row.names = FALSE)
prediction3<-data.frame(PassengerId=test$PassengerId,Survived=test$Survived)
write.csv(prediction3,"prediction3.csv",row.names = FALSE)
prediction3<-data.frame(PassengerId=test$PassengerId,Survived=test$Survived)
write.csv(prediction3,"prediction3.csv",row.names = FALSE)
library(rpart)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data=train,
method="class")
plot(fit)
text(fit)
install.packages('rattle')
install.packages('rpart.plot')
library(rattle)
library(rpart.plot)
library(RColorBrewer)
fancyRpartPlot(fit)
setpwd()
getpwd()
getwd()
setwd('C:/Users/Susheela/Documents/data analysis/assignment 1')
df <- read.csv("car_r.csv", header=TRUE)
names(df)
nrow(df)
nrow(df[,1] == 'Ford')
nrow(df[:,1] == 'Ford')
nrow(df[1,1] == 'Ford')
